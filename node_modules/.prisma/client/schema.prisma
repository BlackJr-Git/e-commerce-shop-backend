// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  ID                Int       @id @default(autoincrement())
  type              String
  UGS               Int       @unique
  name              String
  isPublished       Boolean   @default(false)
  isHighlighted     Boolean   @default(false)
  isVisible         String
  shortDescription  String?
  description       String
  discountStartDate DateTime?
  discountEndDate   DateTime?
  isAvailable       Boolean   @default(true)
  weight            Float?
  length            Float?
  width             Float?
  height            Float?
  discountPrice     Float?
  price             Float
  Categories        String
  tag               String
  Images            String
  Parent            String?
  Groups            String?
  suggestedProducts Int[]  
  orderItems         OrderItem[]
}

model User {
  id        Int     @id @default(autoincrement())
  name      String
  firstName String
  phone     String
  email     String  @unique
  country   String
  address   String
  address2  String?
  city      String
  township  String
  avatar    String?
  password  String
  role      String
  orders    Order[]
}

model Order {
  id         Int         @id @default(autoincrement())
  createdAt  DateTime    @default(now())
  userId     Int
  user       User        @relation(fields: [userId], references: [id])
  status     String      // Par exemple : "en attente", "expédié", "livré"
  total      Float       
  orderItems OrderItem[]
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  orderId   Int
  order     Order   @relation(fields: [orderId], references: [id])
  productId Int
  product   Product @relation(fields: [productId], references: [ID])
  quantity  Int
  price     Float   
}

